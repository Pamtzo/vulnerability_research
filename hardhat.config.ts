import '@nomiclabs/hardhat-waffle';
import '@nomiclabs/hardhat-ethers';
import '@nomiclabs/hardhat-etherscan';

import * as dotenv from 'dotenv';
dotenv.config();

import { HardhatUserConfig } from 'hardhat/config';


interface ExtendedHardhatConfig extends HardhatUserConfig {
  remappings: [string]
  gasReporter: {
    currency: string;
    enabled: boolean;
  };
}

const config: ExtendedHardhatConfig = {
  defaultNetwork: 'hardhat',
  networks: {
    hardhat: {},
    rinkeby: {
      url: `https://rinkeby.infura.io/v3/${process.env.INFURA_PROJECT_ID}`,
      accounts: [process.env.RINKEBY_PRIVATE_KEY as string],
    },
  },
  etherscan: {
    apiKey: process.env.ETHERSCAN_API_KEY,
  },
  solidity: {
    version: '0.8.0',
    settings: {
      optimizer: {
        enabled: true,
        runs: 200,
      },
    },
  },
  paths: {
    artifacts: './artifacts',
    sources: './contracts',
  },
  remappings: [
    '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
  ],
  gasReporter: {
    currency: 'USD',
    enabled: process.env.REPORT_GAS === 'true',
  },
};


export default config;
